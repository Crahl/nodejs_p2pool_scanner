extends layout

block append css
  style(type='text/css').
    #notice {
      background: #5bc0de;
      color:black;
    }
    .capatilize {
      text-transform: capitalize;
    }
block append content
    .container
      .page-header
        .row
          .col-lg-12
            .well.well-sm
              | Last Scanned 
              span#update
        #map
        .row
          .col-lg-12
            table#sortTable.table.table-bordered.table-striped.table-hover
              thead
                tr
                  th(title='Click to sort', data-sort='string-ins') Address
                  th(title='Click to sort', data-sort='string-ins') Location
                  th(title='Click to sort', data-sort='float') Fee
                  th(title='Click to sort', data-sort='int') Uptime
                  th(title='Click to sort', data-sort='int') Efficiency
                  th(title='Click to sort', data-sort='int') Local Hash rate
                  th(title='Click to sort', data-sort='int') DASH Hash rate
                  th(title='Click to sort', data-sort='int') Users
                  th(title='Click to sort', data-sort='int') Ping
                  th(title='Get Work Template Latency') GWTL
                  th(title='Click to sort', data-sort='string-ins') Version
              tbody#list

block append scripts
  script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/proj4js/2.2.2/proj4.js')
  script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/highmaps/1.1.5/highmaps.js')
  script(type='text/javascript', src='//code.highcharts.com/mapdata/custom/world.js')
  script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/highcharts/4.0.4/themes/dark-unica.js')

  script(type='text/javascript', src='//cdn.socket.io/socket.io-1.0.0.js')
  script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/moment.js/2.8.4/moment.min.js')
  script(type='text/javascript', src='//cdnjs.cloudflare.com/ajax/libs/stupidtable/0.0.1/stupidtable.min.js')

  script(type='text/javascript').
    var socket = io.connect();
    $(document).ready(function(){
      loadServers();
      loadMap();
      setTimeout(function(){$('#sortTable').stupidtable();},1000);
    });
    function gwtl(address,id){
      all = 0;
      ii = 0;
      $.getJSON('http://'+address+'/web/graph_data/getwork_latency/last_hour',function (res){
        $.each(res, function(i,v) {
          all += v[1];
          ii++;
        });
        avg = (all/ii) * 1000;
        if(avg > 1000) {
          $(id).find('.gwtl').html('<span class="label label-danger">' + avg.toFixed(2) + ' ms</span>');
        } else if(avg > 500) {
          $(id).find('.gwtl').html('<span class="label label-warning">' + avg.toFixed(2) + ' ms</span>');
        } else {
          $(id).find('.gwtl').html('<span class="label label-success">' + avg.toFixed(2) + ' ms</span>');
        }
      });
    }
    function loadServers(){
      var servers = [];
      var nodes = [];
      index=0;
      socket.on('initiateNodes', function (data) {
        nodes = data.nodes;
        //console.log(nodes);
        coin = nodes.shift();
        $("#update").text(moment(parseInt(coin[0] + '000')).format('MMM Do YYYY, HH:mm Z'));
        json = nodes;
        $.each(json, function(index, node){
          servers.push(["#" + node[0].replace(/\./g, "_"), node[0], coin[1], coin[2], toTitleCase(node[1]) + ' <img src=/assets/img/flags/' + node[2] + '.gif align=absmiddle border=0/>', node[3], node[4]]);
        });
        $.each(servers, function(i,v){
          var timeStart = new Date().getTime();
          $.get('http://'+v[1]+':'+v[2]+'/fee', function(res) {
            $(v[0]+' .fee').html(res + '%');
          }).success(function (fee){
            var serverSize =  0,
            serverColor,
            serverHash;
 
           elapsed = new Date().getTime() - timeStart;
            if($(v[0]).is('*') == false){
              $('#list').append('<tr id="'+v[0].substring(1)+'"><td>'+'<a href="http://'+v[1]+':'+v[2]+'" target="_blank">'+v[1]+':'+v[2]+'</a>'+'</td><td class=capatilize>'+v[4]+'</td>'+'<td class="fee">'+fee+'%</td><td class="uptime">Loading...</td><td class="effeciency">Loading...</td><td class="hash_rate">Loading...</td><td class="network_hash">Loading...</td><td class="users">Loading...</td><td class="ping">Loading...</td><td class="gwtl" onClick="gwtl(\''+v[1]+':'+v[2]+'\',\''+v[0]+'\');">Check</td><td class="version"></td></tr>');
            }
            if(elapsed > 1000){
              $(v[0]+' .ping').html('<span class="label label-danger">' + elapsed + 'ms</span>');
              serverColor = Highcharts.getOptions().colors[2];
            } else if(elapsed > 250) {
              $(v[0]+' .ping').html('<span class="label label-warning">' + elapsed + 'ms</span>');
              serverColor = '#F7DC10';
            } else {
              $(v[0]+' .ping').html('<span class="label label-success">' + elapsed + 'ms</span>');
              serverColor = Highcharts.getOptions().colors[1];
            }
            $(v[0]+' .ping').attr('data-sort-value',elapsed);
            $.getJSON('http://'+v[1]+':'+v[2]+'/local_stats', function(res) {
              uptime = res.uptime/60/60/24;
              if(uptime < 1){
                uptime = res.uptime/60/60;
                $(v[0]).find('.uptime').html(uptime.toFixed(1) + ' hours');
              } else {
                $(v[0]).find('.uptime').html('<b>' + uptime.toFixed(1) + ' days</b>');
              }
              effeciency = res.efficiency * 100;
              rate = 0;
              users = 0;
              $.each(res.miner_hash_rates, function(ii,rates) {
                rate += rates;
                users++;
              });
              $(v[0]).find('.users').html(users);
              if(rate == 0) {
                $(v[0]).find('.effeciency').html('N/A');
              } else {
                $(v[0]).find('.effeciency').html(effeciency.toFixed(2) + '%');
              }
              serverSize = rate;
              if(rate > 1000000000) {
                n = rate/1000/1000/1000;
                $(v[0]).find('.hash_rate').html(n.toFixed(2) + ' GH/s');
                serverHash = n.toFixed(2) + ' GH/s';
              } else if(rate > 1000000) {
                n = rate/1000/1000;
                $(v[0]).find('.hash_rate').html(n.toFixed(2) + ' MH/s');
                serverHash = n.toFixed(2) + ' MH/s';
              } else if(rate > 1000) {
                n = rate/1000;
                $(v[0]).find('.hash_rate').html(n.toFixed(2) + ' KH/s');
                serverHash = n.toFixed(2) + ' KH/s';
              } else {
                $(v[0]).find('.hash_rate').html(rate + ' H/s');
                serverHash = rate + ' H/s';
              }
              $(v[0]+' .hash_rate').attr('data-sort-value',rate);
              $(v[0]+' .uptime').attr('data-sort-value',res.uptime);
              $(v[0]+' .effeciency').attr('data-sort-value',effeciency.toFixed(0));
              $.getJSON('http://'+v[1]+':'+v[2]+'/web/version', function(res) {
                $(v[0]).find('.version').html(res.trunc(25));
              });
              $.getJSON('http://'+v[1]+':'+v[2]+'/global_stats', function(res) {
                if(res.network_hashrate > 1000000000) {
                  n = res.network_hashrate/1000/1000/1000;
                  $(v[0]).find('.network_hash').html(n.toFixed(2) + ' GH/s');
                } else if(res.network_hashrate > 1000000) {
                  n = res.network_hashrate/1000/1000;
                  $(v[0]).find('.network_hash').html(n.toFixed(2) + ' MH/s');
                } else if(res.network_hashrate > 1000) {
                  n = res.network_hashrate/1000;
                  $(v[0]).find('.network_hash').html(n.toFixed(2) + ' KH/s');
                } else {
                  $(v[0]).find('.network_hash').html(res.network_hashrate + ' H/s');
                }
              });

              if(serverSize===0){serverSize = 1;}
              $('#map').highcharts().series[1].addPoint({ip: v[1],lat: v[5],lon: v[6], z:serverSize, color:serverColor, hash:serverHash});
            });
          }).error(function (){
            $(v[0]).remove();
          });
        });
      });
    }
    function loadMap(){
      $('#map').highcharts('Map', {
        title: {
          text: 'DASH P2Pool Servers'
        },
        mapNavigation: {
          enabled: true
        },
        legend: {
          enabled: false
        },
        tooltip: {
          headerFormat: '',
          pointFormat: '<b>{point.ip}</b><br>{point.hash}'
        },
        series: [{
          mapData: Highcharts.maps['custom/world'],
          name: 'Basemap',
          borderColor: '#A0A0A0',
          nullColor: 'rgba(200, 200, 200, 0.3)',
          showInLegend: false
        }, {
          type: 'mapbubble',
          maxSize: '12%',
          minSize: '10',
          data : []
        }]
      });
    }

    String.prototype.trunc = String.prototype.trunc || function(n){ return this.length>n ? this.substr(0,n-1)+'&hellip;' : this; };
    function toTitleCase(str){
      return str.replace(/\\w\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});
    }
